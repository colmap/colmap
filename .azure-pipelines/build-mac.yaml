parameters:
  displayName: Mac 10.15
  macVersion: '10.15'
  
jobs:
- job: mac_build_${{ replace(parameters.macVersion, '.', '') }}
  displayName: ${{ parameters.displayName }}
  pool:
    vmImage: 'macOS-${{ parameters.macVersion }}'
  variables:
    COMPILER_CACHE_DIR: $(Pipeline.Workspace)/compiler-cache
    COMPILER_CACHE_VERSION: 2
    CCACHE_DIR: $(COMPILER_CACHE_DIR)/ccache
    CCACHE_BASEDIR: $(Build.SourcesDirectory)
  steps:
  - script: |
      brew install \
        cmake \
        ninja \
        boost \
        eigen \
        flann \
        freeimage \
        metis \
        glog \
        googletest \
        ceres-solver \
        qt5 \
        glew \
        cgal \
        sqlite3 \
        ccache
    displayName: Install dependencies

  - task: Cache@2
    inputs:
      key: ccache | "$(COMPILER_CACHE_VERSION)" | "$(Agent.OS)" | "${{ parameters.displayName }}" | "$(Build.BuildNumber)"
      restoreKeys: ccache | "$(COMPILER_CACHE_VERSION)" | "$(Agent.OS)" | "${{ parameters.displayName }}"
      path: $(COMPILER_CACHE_DIR)
    displayName: Restore compiler cache

  - script: |
      export PATH="/usr/local/opt/qt@5/bin:$PATH"
      cmake --version
      mkdir build
      cd build
      cmake .. \
        -GNinja \
        -DTESTS_ENABLED=ON \
        -DQt5_DIR=/usr/local/opt/qt/lib/cmake/Qt5
      ninja
    displayName: Configure and build

  - script: |
      cd build
      ctest
      tests_pass=$?
      if [ $tests_pass -ne 0 ]; then
          echo "\n\n\nTests failed, rerunning with verbose output"
          ctest --rerun-failed --output-on-failure
      fi
      exit $tests_pass
    displayName: Run tests

  - script: |
      set -x
      ccache --show-stats --verbose
      ccache --evict-older-than 1d
      ccache --show-stats --verbose
    displayName: Cleanup compiler cache
