jobs:
- job: windows_build
  displayName: 'Windows VS2019'
  timeoutInMinutes: 240
  pool:
    vmImage: 'windows-2019'
  variables:
    vcpkgGitCommitId: ec6fe06e8da05a8157dc8581fa96b36b571c1bd5
  steps:
  - task: Cache@2
    displayName: 'Cache vcpkg'
    inputs:
      key: $(Build.SourcesDirectory)/.azure-pipelines/build-windows-vcpkg.txt | "$(vcpkgGitCommitId)" | "$(Agent.OS)"
      path: '$(Build.BinariesDirectory)/vcpkg'

  - task: run-vcpkg@0
    displayName: 'Run vcpkg'
    inputs:
      vcpkgArguments: '@$(Build.SourcesDirectory)/.azure-pipelines/build-windows-vcpkg.txt'
      vcpkgGitCommitId: $(vcpkgGitCommitId)
      vcpkgGitURL: https://github.com/microsoft/vcpkg

  - task: run-cmake@0
    displayName: 'Configure and build'
    inputs:
      cmakeListsTxtPath: '$(Build.SourcesDirectory)/CMakeLists.txt'
      cmakeBuildType: 'Release'
      cmakeGenerator: 'Ninja'
      buildDirectory: '$(Build.ArtifactStagingDirectory)'
      useVcpkgToolchainFile: true

  - pwsh: |
      $env:PATH = "$(Build.BinariesDirectory)/vcpkg/installed/x64-windows/release/bin/;$env:Path"
      ctest
      $tests_pass=$LastExitCode
      if ($tests_pass -ne 0) {
          echo "`n`n`nTests failed, rerunning with verbose output"
          ctest --rerun-failed --output-on-failure
      }
      exit $tests_pass
    displayName: 'Run tests'
    workingDirectory: $(Build.ArtifactStagingDirectory)
