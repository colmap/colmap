arch:
      - amd64
      - ppc64le
language: cpp
sudo: true
dist: xenial

addons:
  apt:
    packages:
      - cmake
      - build-essential
      - libboost-program-options-dev
      - libboost-filesystem-dev
      - libboost-graph-dev
      - libboost-system-dev
      - libboost-test-dev
      - libeigen3-dev
      - libsuitesparse-dev
      - libfreeimage-dev
      - libgoogle-glog-dev
      - libgflags-dev
      - libglew-dev
      - qtbase5-dev
      - libqt5opengl5-dev
      - libcgal-dev
      - libcgal-qt5-dev

env:
  - QT_QPA_PLATFORM="offscreen"

services:
  - xvfb

matrix:
  include:
    - os: linux
      env:
        - CMAKE_OPTIONS="-DOPENGL_ENABLED=OFF -DCGAL_ENABLED=ON"
        - RUN_TESTS=true
        - QT_VERSION=597
    - os: linux
      env:
        - CMAKE_OPTIONS="-DOPENGL_ENABLED=OFF -DCGAL_ENABLED=ON"
        - RUN_TESTS=true
        - QT_VERSION=542
    - os: linux
      env:
        - CMAKE_OPTIONS="-DOPENGL_ENABLED=OFF -DCGAL_ENABLED=OFF"
        - RUN_TESTS=true
        - QT_VERSION=597
    - os: linux
      env:
        - CMAKE_OPTIONS="-DOPENGL_ENABLED=ON -DCGAL_ENABLED=ON"
        - RUN_TESTS=false
        - QT_VERSION=597
    - os: linux
      env:
        - CMAKE_OPTIONS="-DOPENGL_ENABLED=OFF -DCGAL_ENABLED=ON -DCUDA_ARCHS=Kepler"
        - RUN_TESTS=false
        - QT_VERSION=597
        - CUDA_VERSION=8.0.61-1
    - os: linux
      env:
        - CMAKE_OPTIONS="-DOPENGL_ENABLED=OFF -DCGAL_ENABLED=ON -DCUDA_ARCHS=Pascal"
        - RUN_TESTS=false
        - QT_VERSION=597
        - CUDA_VERSION=10.1.243-1
    - os: osx
      env:
        - CMAKE_OPTIONS="-DIPO_ENABLED=OFF -DQt5_DIR=/usr/local/opt/qt/lib/cmake/Qt5"

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps
    - ${TRAVIS_BUILD_DIR}/build

before_script:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew tap homebrew/science
      brew install \
        cmake \
        boost \
        eigen \
        freeimage \
        glog \
        gflags \
        suite-sparse \
        ceres-solver \
        qt5 \
        glew \
        cgal || true
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      export DISPLAY=:99.0

      sudo add-apt-repository --yes ppa:beineri/opt-qt${QT_VERSION}-xenial
      export PATH="/opt/qt${QT_VERSION:0:2}/bin:$PATH"
      sudo apt-get update -qq
      sudo apt-get -y install qt${QT_VERSION:0:2}base

      if [[ ! -z "$CUDA_VERSION" ]]; then
        wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_${CUDA_VERSION}_amd64.deb
        sudo dpkg -i cuda-repo-ubuntu1604_${CUDA_VERSION}_amd64.deb
        sudo apt-get update -qq
        CUDA_VERSION_APT=${CUDA_VERSION:0:3}
        sudo apt-get install -y cuda-drivers cuda-core-${CUDA_VERSION_APT} cuda-cudart-dev-${CUDA_VERSION_APT} cuda-curand-dev-${CUDA_VERSION_APT}
        sudo ln -s /usr/local/cuda-${CUDA_VERSION:0:3}/ /usr/local/cuda
      fi

      cd ${TRAVIS_BUILD_DIR}/deps
      if [[ -z "$(ls -A ceres-solver)" ]]; then
        git clone https://ceres-solver.googlesource.com/ceres-solver
      fi
      cd ceres-solver
      git pull
      git checkout 1.14.0
      mkdir -p build
      cd build
      cmake .. \
        -DBUILD_TESTING=OFF \
        -DBUILD_EXAMPLES=OFF
      make -j2
      sudo make install
      cd ${TRAVIS_BUILD_DIR}
    fi

script:
  - cmake --version
  - cd build
  - |
    if [[ -z "$(ls -A colmap)" ]]; then
      git clone https://github.com/colmap/colmap.git
    fi
  - cd colmap
  - git pull
  - git checkout ${TRAVIS_BRANCH}
  - mkdir -p build
  - cd build
  - |
    if [ "$RUN_TESTS" = true ]; then
      export CMAKE_OPTIONS="${CMAKE_OPTIONS} -DTESTS_ENABLED=ON"
    else
      export CMAKE_OPTIONS="${CMAKE_OPTIONS} -DTESTS_ENABLED=OFF"
    fi
  - cmake .. -DCMAKE_BUILD_TYPE=Release ${CMAKE_OPTIONS}
  - make -j2
  - |
    if [ "$RUN_TESTS" = true ]; then
      TEST_OUTPUT_ON_FAILURE=1 make test
    fi
