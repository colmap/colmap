
// Copyright (c) 2010-2017 niXman (i dot nixman dog gmail dot com). All
// rights reserved.
//
// This file is part of YAS(https://github.com/niXman/yas) project.
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
//
//
// Boost Software License - Version 1.0 - August 17th, 2003
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef __yas__detail__preprocessor__preprocessor_hpp
#define __yas__detail__preprocessor__preprocessor_hpp

#include <yas/detail/preprocessor/auto_rec.hpp>
#include <yas/detail/preprocessor/bitand.hpp>
#include <yas/detail/preprocessor/bool.hpp>
#include <yas/detail/preprocessor/cat.hpp>
#include <yas/detail/preprocessor/comma.hpp>
#include <yas/detail/preprocessor/comma_if.hpp>
#include <yas/detail/preprocessor/config.hpp>
#include <yas/detail/preprocessor/dec.hpp>
#include <yas/detail/preprocessor/empty.hpp>
#include <yas/detail/preprocessor/enum_params.hpp>
#include <yas/detail/preprocessor/equal.hpp>
#include <yas/detail/preprocessor/error.hpp>
#include <yas/detail/preprocessor/expr_if.hpp>
#include <yas/detail/preprocessor/expr_iif.hpp>
#include <yas/detail/preprocessor/if.hpp>
#include <yas/detail/preprocessor/iif.hpp>
#include <yas/detail/preprocessor/repeat.hpp>
#include <yas/detail/preprocessor/dec.hpp>
#include <yas/detail/preprocessor/inc.hpp>
#include <yas/detail/preprocessor/not_equal.hpp>
#include <yas/detail/preprocessor/overload.hpp>
#include <yas/detail/preprocessor/preprocessor.hpp>
#include <yas/detail/preprocessor/repeat.hpp>
#include <yas/detail/preprocessor/rep_for.hpp>
#include <yas/detail/preprocessor/seq_elem.hpp>
#include <yas/detail/preprocessor/seq_for_each.hpp>
#include <yas/detail/preprocessor/seq_for_each_i.hpp>
#include <yas/detail/preprocessor/seq_seq.hpp>
#include <yas/detail/preprocessor/seq_size.hpp>
#include <yas/detail/preprocessor/stringize.hpp>
#include <yas/detail/preprocessor/tuple_eat.hpp>
#include <yas/detail/preprocessor/tuple_elem.hpp>
#include <yas/detail/preprocessor/tuple_rem.hpp>
#include <yas/detail/preprocessor/tuple_size.hpp>
#include <yas/detail/preprocessor/tuple_to_seq.hpp>
#include <yas/detail/preprocessor/variadic_elem.hpp>
#include <yas/detail/preprocessor/variadic_size.hpp>

#endif // __yas__detail__preprocessor__preprocessor_hpp
